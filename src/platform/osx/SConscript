Import("env")

import os

# ----------------------------------------------------------------------------
# Build Actions
# ----------------------------------------------------------------------------

env = env.Clone()
env.Append(
    CPPPATH = ["/usr/local/Cellar/cairo/1.12.6/include/cairo"],
    LIBPATH = ["/usr/local/Cellar/cairo/1.12.6/lib/"],
    LINKFLAGS = ["-lobjc"])

qcbEnv = env.Clone()
qcbEnv.Append(
    CPPPATH=["/usr/local/Cellar/py2cairo/1.10.0/include/pycairo"],
    LINKFLAGS=["-undefined", "dynamic_lookup"],
    LIBS=["cairo"],
    FRAMEWORKS=["AppKit"])

quartzCairoBridge = qcbEnv.LoadableModule(
    source = ["quartz_cairo_bridge.m"],
    target = ["quartz_cairo_bridge.so"],
    )

qcbEnv.Install("#enso/platform/osx", quartzCairoBridge)

# key notifier

keyNotifier = env.Program(
    source = ["EnsoKeyNotifier.m"],
    FRAMEWORKS = ["ApplicationServices", "Foundation", "AppKit"]
    )

env.Install("#bin/Enso.app/Contents/Resources/bin", keyNotifier)

# key utils

keyUtils = env.LoadableModule(
    source = ["key_utils.m"],
    target = ["key_utils.so"],
    FRAMEWORKS = ["ApplicationServices"]
    )

env.Install("#enso/platform/osx/selection", keyUtils)

# App

enso = env.Program("main.m", FRAMEWORKS=["Cocoa", "Python"])
env.InstallAs("#bin/Enso.app/Contents/MacOS/Enso", enso)
env.InstallAs("#bin/Enso.app/Contents/Resources/main.py", "#scripts/run_enso.py")

SConscript("appdata/SConscript", exports="env")

symlink = env.Command("#bin/Enso.app/Contents/Resources/enso", "#enso", 
    lambda target, source, env: os.symlink(os.path.abspath(str(source[0])), os.path.abspath(str(target[0]))))
env.Clean(symlink, "#bin/Enso.app/Contents/Resources/enso")
